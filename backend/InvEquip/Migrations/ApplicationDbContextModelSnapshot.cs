// <auto-generated />
using System;
using InvEquip.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InvEquip.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InvEquip.Data.Authentication.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LastName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContractName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("VendorId");

                    b.ToTable("Contract");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContractName = "Unassigned",
                            Deleted = false,
                            EndDate = new DateTime(1980, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorId = 1
                        },
                        new
                        {
                            Id = 2,
                            ContractName = "TestContract02",
                            Deleted = false,
                            EndDate = new DateTime(1980, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorId = 2
                        },
                        new
                        {
                            Id = 3,
                            ContractName = "TestContract03",
                            Deleted = false,
                            EndDate = new DateTime(1980, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorId = 3
                        },
                        new
                        {
                            Id = 4,
                            ContractName = "TestContract04",
                            Deleted = false,
                            EndDate = new DateTime(1980, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorId = 4
                        },
                        new
                        {
                            Id = 5,
                            ContractName = "TestContract05",
                            Deleted = false,
                            EndDate = new DateTime(1980, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorId = 5
                        },
                        new
                        {
                            Id = 6,
                            ContractName = "TestContract06",
                            Deleted = false,
                            EndDate = new DateTime(1980, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorId = 6
                        },
                        new
                        {
                            Id = 7,
                            ContractName = "TestContract07",
                            Deleted = false,
                            EndDate = new DateTime(1980, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorId = 2
                        },
                        new
                        {
                            Id = 8,
                            ContractName = "TestContract08",
                            Deleted = false,
                            EndDate = new DateTime(1980, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorId = 3
                        },
                        new
                        {
                            Id = 9,
                            ContractName = "TestContract09",
                            Deleted = false,
                            EndDate = new DateTime(1980, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorId = 4
                        },
                        new
                        {
                            Id = 10,
                            ContractName = "TestContract010",
                            Deleted = false,
                            EndDate = new DateTime(1980, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorId = 5
                        },
                        new
                        {
                            Id = 11,
                            ContractName = "TestContract011",
                            Deleted = false,
                            EndDate = new DateTime(1980, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorId = 6
                        });
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deleted = false,
                            DepartmentName = "Unassigned"
                        },
                        new
                        {
                            Id = 2,
                            Deleted = false,
                            DepartmentName = "TestDepartment02"
                        },
                        new
                        {
                            Id = 3,
                            Deleted = false,
                            DepartmentName = "TestDepartment03"
                        },
                        new
                        {
                            Id = 4,
                            Deleted = false,
                            DepartmentName = "TestDepartment04"
                        },
                        new
                        {
                            Id = 5,
                            Deleted = false,
                            DepartmentName = "TestDepartment05"
                        },
                        new
                        {
                            Id = 6,
                            Deleted = false,
                            DepartmentName = "TestDepartment06"
                        });
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HwModelId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceTag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("HwModelId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssetNumber = "A0001",
                            ContractId = 1,
                            Deleted = false,
                            DeviceName = "Device0000",
                            HwModelId = 1,
                            Notes = "TestNotes",
                            ServiceTag = "A1A"
                        },
                        new
                        {
                            Id = 2,
                            AssetNumber = "A000102",
                            ContractId = 2,
                            Deleted = false,
                            DeviceName = "TestDevice00002",
                            HwModelId = 2,
                            Notes = "TestNotes02",
                            ServiceTag = "A1A02"
                        },
                        new
                        {
                            Id = 3,
                            AssetNumber = "A000103",
                            ContractId = 3,
                            Deleted = false,
                            DeviceName = "TestDevice00003",
                            HwModelId = 3,
                            Notes = "TestNotes03",
                            ServiceTag = "A1A03"
                        },
                        new
                        {
                            Id = 4,
                            AssetNumber = "A000104",
                            ContractId = 4,
                            Deleted = false,
                            DeviceName = "TestDevice00004",
                            HwModelId = 4,
                            Notes = "TestNotes04",
                            ServiceTag = "A1A04"
                        },
                        new
                        {
                            Id = 5,
                            AssetNumber = "A000105",
                            ContractId = 5,
                            Deleted = false,
                            DeviceName = "TestDevice00005",
                            HwModelId = 5,
                            Notes = "TestNotes05",
                            ServiceTag = "A1A05"
                        },
                        new
                        {
                            Id = 6,
                            AssetNumber = "A000106",
                            ContractId = 6,
                            Deleted = false,
                            DeviceName = "TestDevice00006",
                            HwModelId = 6,
                            Notes = "TestNotes06",
                            ServiceTag = "A1A06"
                        },
                        new
                        {
                            Id = 7,
                            AssetNumber = "A000107",
                            ContractId = 2,
                            Deleted = false,
                            DeviceName = "TestDevice00007",
                            HwModelId = 2,
                            Notes = "TestNotes07",
                            ServiceTag = "A1A07"
                        },
                        new
                        {
                            Id = 8,
                            AssetNumber = "A000108",
                            ContractId = 3,
                            Deleted = false,
                            DeviceName = "TestDevice00008",
                            HwModelId = 3,
                            Notes = "TestNotes08",
                            ServiceTag = "A1A08"
                        },
                        new
                        {
                            Id = 9,
                            AssetNumber = "A000109",
                            ContractId = 4,
                            Deleted = false,
                            DeviceName = "TestDevice00009",
                            HwModelId = 4,
                            Notes = "TestNotes09",
                            ServiceTag = "A1A09"
                        },
                        new
                        {
                            Id = 10,
                            AssetNumber = "A0001010",
                            ContractId = 5,
                            Deleted = false,
                            DeviceName = "TestDevice000010",
                            HwModelId = 5,
                            Notes = "TestNotes010",
                            ServiceTag = "A1A010"
                        },
                        new
                        {
                            Id = 11,
                            AssetNumber = "A0001011",
                            ContractId = 6,
                            Deleted = false,
                            DeviceName = "TestDevice000011",
                            HwModelId = 6,
                            Notes = "TestNotes011",
                            ServiceTag = "A1A011"
                        },
                        new
                        {
                            Id = 12,
                            AssetNumber = "A0001012",
                            ContractId = 2,
                            Deleted = false,
                            DeviceName = "TestDevice000012",
                            HwModelId = 2,
                            Notes = "TestNotes012",
                            ServiceTag = "A1A012"
                        },
                        new
                        {
                            Id = 13,
                            AssetNumber = "A0001013",
                            ContractId = 3,
                            Deleted = false,
                            DeviceName = "TestDevice000013",
                            HwModelId = 3,
                            Notes = "TestNotes013",
                            ServiceTag = "A1A013"
                        },
                        new
                        {
                            Id = 14,
                            AssetNumber = "A0001014",
                            ContractId = 4,
                            Deleted = false,
                            DeviceName = "TestDevice000014",
                            HwModelId = 4,
                            Notes = "TestNotes014",
                            ServiceTag = "A1A014"
                        },
                        new
                        {
                            Id = 15,
                            AssetNumber = "A0001015",
                            ContractId = 5,
                            Deleted = false,
                            DeviceName = "TestDevice000015",
                            HwModelId = 5,
                            Notes = "TestNotes015",
                            ServiceTag = "A1A015"
                        },
                        new
                        {
                            Id = 16,
                            AssetNumber = "A0001016",
                            ContractId = 6,
                            Deleted = false,
                            DeviceName = "TestDevice000016",
                            HwModelId = 6,
                            Notes = "TestNotes016",
                            ServiceTag = "A1A016"
                        },
                        new
                        {
                            Id = 17,
                            AssetNumber = "A0001017",
                            ContractId = 2,
                            Deleted = false,
                            DeviceName = "TestDevice000017",
                            HwModelId = 2,
                            Notes = "TestNotes017",
                            ServiceTag = "A1A017"
                        },
                        new
                        {
                            Id = 18,
                            AssetNumber = "A0001018",
                            ContractId = 3,
                            Deleted = false,
                            DeviceName = "TestDevice000018",
                            HwModelId = 3,
                            Notes = "TestNotes018",
                            ServiceTag = "A1A018"
                        },
                        new
                        {
                            Id = 19,
                            AssetNumber = "A0001019",
                            ContractId = 4,
                            Deleted = false,
                            DeviceName = "TestDevice000019",
                            HwModelId = 4,
                            Notes = "TestNotes019",
                            ServiceTag = "A1A019"
                        },
                        new
                        {
                            Id = 20,
                            AssetNumber = "A0001020",
                            ContractId = 5,
                            Deleted = false,
                            DeviceName = "TestDevice000020",
                            HwModelId = 5,
                            Notes = "TestNotes020",
                            ServiceTag = "A1A020"
                        },
                        new
                        {
                            Id = 21,
                            AssetNumber = "A0001021",
                            ContractId = 6,
                            Deleted = false,
                            DeviceName = "TestDevice000021",
                            HwModelId = 6,
                            Notes = "TestNotes021",
                            ServiceTag = "A1A021"
                        },
                        new
                        {
                            Id = 22,
                            AssetNumber = "A0001022",
                            ContractId = 2,
                            Deleted = false,
                            DeviceName = "TestDevice000022",
                            HwModelId = 2,
                            Notes = "TestNotes022",
                            ServiceTag = "A1A022"
                        },
                        new
                        {
                            Id = 23,
                            AssetNumber = "A0001023",
                            ContractId = 3,
                            Deleted = false,
                            DeviceName = "TestDevice000023",
                            HwModelId = 3,
                            Notes = "TestNotes023",
                            ServiceTag = "A1A023"
                        },
                        new
                        {
                            Id = 24,
                            AssetNumber = "A0001024",
                            ContractId = 4,
                            Deleted = false,
                            DeviceName = "TestDevice000024",
                            HwModelId = 4,
                            Notes = "TestNotes024",
                            ServiceTag = "A1A024"
                        },
                        new
                        {
                            Id = 25,
                            AssetNumber = "A0001025",
                            ContractId = 5,
                            Deleted = false,
                            DeviceName = "TestDevice000025",
                            HwModelId = 5,
                            Notes = "TestNotes025",
                            ServiceTag = "A1A025"
                        },
                        new
                        {
                            Id = 26,
                            AssetNumber = "A0001026",
                            ContractId = 6,
                            Deleted = false,
                            DeviceName = "TestDevice000026",
                            HwModelId = 6,
                            Notes = "TestNotes026",
                            ServiceTag = "A1A026"
                        },
                        new
                        {
                            Id = 27,
                            AssetNumber = "A0001027",
                            ContractId = 2,
                            Deleted = false,
                            DeviceName = "TestDevice000027",
                            HwModelId = 2,
                            Notes = "TestNotes027",
                            ServiceTag = "A1A027"
                        },
                        new
                        {
                            Id = 28,
                            AssetNumber = "A0001028",
                            ContractId = 3,
                            Deleted = false,
                            DeviceName = "TestDevice000028",
                            HwModelId = 3,
                            Notes = "TestNotes028",
                            ServiceTag = "A1A028"
                        },
                        new
                        {
                            Id = 29,
                            AssetNumber = "A0001029",
                            ContractId = 4,
                            Deleted = false,
                            DeviceName = "TestDevice000029",
                            HwModelId = 4,
                            Notes = "TestNotes029",
                            ServiceTag = "A1A029"
                        },
                        new
                        {
                            Id = 30,
                            AssetNumber = "A0001030",
                            ContractId = 5,
                            Deleted = false,
                            DeviceName = "TestDevice000030",
                            HwModelId = 5,
                            Notes = "TestNotes030",
                            ServiceTag = "A1A030"
                        },
                        new
                        {
                            Id = 31,
                            AssetNumber = "A0001031",
                            ContractId = 6,
                            Deleted = false,
                            DeviceName = "TestDevice000031",
                            HwModelId = 6,
                            Notes = "TestNotes031",
                            ServiceTag = "A1A031"
                        },
                        new
                        {
                            Id = 32,
                            AssetNumber = "A0001032",
                            ContractId = 2,
                            Deleted = false,
                            DeviceName = "TestDevice000032",
                            HwModelId = 2,
                            Notes = "TestNotes032",
                            ServiceTag = "A1A032"
                        },
                        new
                        {
                            Id = 33,
                            AssetNumber = "A0001033",
                            ContractId = 3,
                            Deleted = false,
                            DeviceName = "TestDevice000033",
                            HwModelId = 3,
                            Notes = "TestNotes033",
                            ServiceTag = "A1A033"
                        },
                        new
                        {
                            Id = 34,
                            AssetNumber = "A0001034",
                            ContractId = 4,
                            Deleted = false,
                            DeviceName = "TestDevice000034",
                            HwModelId = 4,
                            Notes = "TestNotes034",
                            ServiceTag = "A1A034"
                        },
                        new
                        {
                            Id = 35,
                            AssetNumber = "A0001035",
                            ContractId = 5,
                            Deleted = false,
                            DeviceName = "TestDevice000035",
                            HwModelId = 5,
                            Notes = "TestNotes035",
                            ServiceTag = "A1A035"
                        },
                        new
                        {
                            Id = 36,
                            AssetNumber = "A0001036",
                            ContractId = 6,
                            Deleted = false,
                            DeviceName = "TestDevice000036",
                            HwModelId = 6,
                            Notes = "TestNotes036",
                            ServiceTag = "A1A036"
                        },
                        new
                        {
                            Id = 37,
                            AssetNumber = "A0001037",
                            ContractId = 2,
                            Deleted = false,
                            DeviceName = "TestDevice000037",
                            HwModelId = 2,
                            Notes = "TestNotes037",
                            ServiceTag = "A1A037"
                        },
                        new
                        {
                            Id = 38,
                            AssetNumber = "A0001038",
                            ContractId = 3,
                            Deleted = false,
                            DeviceName = "TestDevice000038",
                            HwModelId = 3,
                            Notes = "TestNotes038",
                            ServiceTag = "A1A038"
                        },
                        new
                        {
                            Id = 39,
                            AssetNumber = "A0001039",
                            ContractId = 4,
                            Deleted = false,
                            DeviceName = "TestDevice000039",
                            HwModelId = 4,
                            Notes = "TestNotes039",
                            ServiceTag = "A1A039"
                        },
                        new
                        {
                            Id = 40,
                            AssetNumber = "A0001040",
                            ContractId = 5,
                            Deleted = false,
                            DeviceName = "TestDevice000040",
                            HwModelId = 5,
                            Notes = "TestNotes040",
                            ServiceTag = "A1A040"
                        },
                        new
                        {
                            Id = 41,
                            AssetNumber = "A0001041",
                            ContractId = 6,
                            Deleted = false,
                            DeviceName = "TestDevice000041",
                            HwModelId = 6,
                            Notes = "TestNotes041",
                            ServiceTag = "A1A041"
                        });
                });

            modelBuilder.Entity("InvEquip.Data.Entity.DeviceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("DeviceTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeviceType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deleted = false,
                            DeviceTypeName = "Unassigned"
                        },
                        new
                        {
                            Id = 2,
                            Deleted = false,
                            DeviceTypeName = "TestDeviceType02"
                        },
                        new
                        {
                            Id = 3,
                            Deleted = false,
                            DeviceTypeName = "TestDeviceType03"
                        },
                        new
                        {
                            Id = 4,
                            Deleted = false,
                            DeviceTypeName = "TestDeviceType04"
                        },
                        new
                        {
                            Id = 5,
                            Deleted = false,
                            DeviceTypeName = "TestDeviceType05"
                        },
                        new
                        {
                            Id = 6,
                            Deleted = false,
                            DeviceTypeName = "TestDeviceType06"
                        });
                });

            modelBuilder.Entity("InvEquip.Data.Entity.HwModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("DeviceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("HwModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("DeviceTypeId");

                    b.HasIndex("VendorId");

                    b.ToTable("HwModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deleted = false,
                            DeviceTypeId = 1,
                            HwModelName = "Unassigned",
                            VendorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Deleted = false,
                            DeviceTypeId = 2,
                            HwModelName = "TestHwModel02",
                            VendorId = 2
                        },
                        new
                        {
                            Id = 3,
                            Deleted = false,
                            DeviceTypeId = 3,
                            HwModelName = "TestHwModel03",
                            VendorId = 3
                        },
                        new
                        {
                            Id = 4,
                            Deleted = false,
                            DeviceTypeId = 4,
                            HwModelName = "TestHwModel04",
                            VendorId = 4
                        },
                        new
                        {
                            Id = 5,
                            Deleted = false,
                            DeviceTypeId = 5,
                            HwModelName = "TestHwModel05",
                            VendorId = 5
                        },
                        new
                        {
                            Id = 6,
                            Deleted = false,
                            DeviceTypeId = 2,
                            HwModelName = "TestHwModel06",
                            VendorId = 2
                        },
                        new
                        {
                            Id = 7,
                            Deleted = false,
                            DeviceTypeId = 3,
                            HwModelName = "TestHwModel07",
                            VendorId = 3
                        });
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deleted = false,
                            Fname = "FirstNameTest",
                            Lname = "LastNameTest",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Deleted = false,
                            Fname = "FirstNameTest02",
                            Lname = "LastNameTest02",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Deleted = false,
                            Fname = "FirstNameTest03",
                            Lname = "LastNameTest03",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 4,
                            Deleted = false,
                            Fname = "FirstNameTest04",
                            Lname = "LastNameTest04",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 5,
                            Deleted = false,
                            Fname = "FirstNameTest05",
                            Lname = "LastNameTest05",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 6,
                            Deleted = false,
                            Fname = "FirstNameTest06",
                            Lname = "LastNameTest06",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 7,
                            Deleted = false,
                            Fname = "FirstNameTest07",
                            Lname = "LastNameTest07",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 8,
                            Deleted = false,
                            Fname = "FirstNameTest08",
                            Lname = "LastNameTest08",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 9,
                            Deleted = false,
                            Fname = "FirstNameTest09",
                            Lname = "LastNameTest09",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 10,
                            Deleted = false,
                            Fname = "FirstNameTest010",
                            Lname = "LastNameTest010",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 11,
                            Deleted = false,
                            Fname = "FirstNameTest011",
                            Lname = "LastNameTest011",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 12,
                            Deleted = false,
                            Fname = "FirstNameTest012",
                            Lname = "LastNameTest012",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 13,
                            Deleted = false,
                            Fname = "FirstNameTest013",
                            Lname = "LastNameTest013",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("InvEquip.Data.Entity.PersonDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonDevices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deleted = false,
                            DeviceId = 1,
                            EndDate = new DateTime(1980, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonId = 1,
                            StartDate = new DateTime(1980, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Deleted = false,
                            DeviceId = 2,
                            EndDate = new DateTime(2000, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonId = 1,
                            StartDate = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Deleted = false,
                            DeviceId = 2,
                            EndDate = new DateTime(2000, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonId = 2,
                            StartDate = new DateTime(2000, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Deleted = false,
                            DeviceId = 2,
                            EndDate = new DateTime(2000, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonId = 3,
                            StartDate = new DateTime(2000, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Deleted = false,
                            DeviceId = 3,
                            EndDate = new DateTime(2000, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonId = 2,
                            StartDate = new DateTime(2000, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Deleted = false,
                            DeviceId = 3,
                            EndDate = new DateTime(2000, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonId = 1,
                            StartDate = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Deleted = false,
                            DeviceId = 3,
                            EndDate = new DateTime(2000, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonId = 2,
                            StartDate = new DateTime(2000, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Deleted = false,
                            DeviceId = 2,
                            EndDate = new DateTime(2000, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonId = 1,
                            StartDate = new DateTime(2000, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deleted = false,
                            DepartmentId = 1,
                            RoleName = "Unassigned"
                        },
                        new
                        {
                            Id = 2,
                            Deleted = false,
                            DepartmentId = 1,
                            RoleName = "TestRole02"
                        },
                        new
                        {
                            Id = 3,
                            Deleted = false,
                            DepartmentId = 1,
                            RoleName = "TestRole03"
                        },
                        new
                        {
                            Id = 4,
                            Deleted = false,
                            DepartmentId = 1,
                            RoleName = "TestRole04"
                        },
                        new
                        {
                            Id = 5,
                            Deleted = false,
                            DepartmentId = 1,
                            RoleName = "TestRole05"
                        },
                        new
                        {
                            Id = 6,
                            Deleted = false,
                            DepartmentId = 1,
                            RoleName = "TestRole06"
                        });
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vendor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deleted = false,
                            VendorName = "Unassigned"
                        },
                        new
                        {
                            Id = 2,
                            Deleted = false,
                            VendorName = "TestVendor02"
                        },
                        new
                        {
                            Id = 3,
                            Deleted = false,
                            VendorName = "TestVendor03"
                        },
                        new
                        {
                            Id = 4,
                            Deleted = false,
                            VendorName = "TestVendor04"
                        },
                        new
                        {
                            Id = 5,
                            Deleted = false,
                            VendorName = "TestVendor05"
                        },
                        new
                        {
                            Id = 6,
                            Deleted = false,
                            VendorName = "TestVendor06"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Contract", b =>
                {
                    b.HasOne("InvEquip.Data.Entity.Vendor", "Vendor")
                        .WithMany("Contracts")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Device", b =>
                {
                    b.HasOne("InvEquip.Data.Entity.Contract", "Contract")
                        .WithMany("Devices")
                        .HasForeignKey("ContractId");

                    b.HasOne("InvEquip.Data.Entity.HwModel", "HwModel")
                        .WithMany("Devices")
                        .HasForeignKey("HwModelId");

                    b.Navigation("Contract");

                    b.Navigation("HwModel");
                });

            modelBuilder.Entity("InvEquip.Data.Entity.HwModel", b =>
                {
                    b.HasOne("InvEquip.Data.Entity.DeviceType", "DeviceType")
                        .WithMany("HwModels")
                        .HasForeignKey("DeviceTypeId");

                    b.HasOne("InvEquip.Data.Entity.Vendor", "Vendor")
                        .WithMany("HwModels")
                        .HasForeignKey("VendorId");

                    b.Navigation("DeviceType");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Person", b =>
                {
                    b.HasOne("InvEquip.Data.Entity.Role", "Role")
                        .WithMany("People")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("InvEquip.Data.Entity.PersonDevice", b =>
                {
                    b.HasOne("InvEquip.Data.Entity.Device", "Device")
                        .WithMany("PeopleDevices")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvEquip.Data.Entity.Person", "Person")
                        .WithMany("PersonDevice")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Role", b =>
                {
                    b.HasOne("InvEquip.Data.Entity.Department", "Department")
                        .WithMany("Roles")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("InvEquip.Data.Authentication.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("InvEquip.Data.Authentication.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvEquip.Data.Authentication.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("InvEquip.Data.Authentication.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Contract", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Department", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Device", b =>
                {
                    b.Navigation("PeopleDevices");
                });

            modelBuilder.Entity("InvEquip.Data.Entity.DeviceType", b =>
                {
                    b.Navigation("HwModels");
                });

            modelBuilder.Entity("InvEquip.Data.Entity.HwModel", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Person", b =>
                {
                    b.Navigation("PersonDevice");
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Role", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("InvEquip.Data.Entity.Vendor", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("HwModels");
                });
#pragma warning restore 612, 618
        }
    }
}
